window.Aiken.initSearch([{"doc":"test_unsafe_bound","title":"test_unsafe_bound","content":" ```\n ┍━ test_unsafe_bound ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n │ PASS [mem:  315895, cpu: 117363288] finite_start\n │ PASS [mem:  298967, cpu: 110454444] finite_end\n ┕━━━━━━━━━━━━━━━━━━━ 2 tests | 2 passed | 0 failed\n ```","url":"test_unsafe_bound.html"},{"doc":"test_bound","title":"test_bound","content":" ```\n ┍━ test_bound ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n │ PASS [mem:  326663, cpu: 128626024] finite_start_bound_type\n │ PASS [mem:  115039, cpu:  45395012] infinite_start_bound_type\n │ PASS [mem:  309735, cpu: 121717180] finite_end_bound_type\n │ PASS [mem:  131967, cpu:  52303856] infinite_end_bound_type\n ┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4 tests | 4 passed | 0 failed\n ```","url":"test_bound.html"},{"doc":"time_util/cheap/interval","title":"ends_after","content":"ends_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after(an_interval) == True\n after(5) |&gt; ends_after(an_interval) == True\n after(6) |&gt; ends_after(an_interval) == True\n strictly_after(3) |&gt; ends_after(an_interval) == True\n strictly_after(4) |&gt; ends_after(an_interval) == True\n strictly_after(5) |&gt; ends_after(an_interval) == True\n before(6) |&gt; ends_after(an_interval) == True\n strictly_before(7) |&gt; ends_after(an_interval) == True\n between(3, 6) |&gt; ends_after(an_interval) == True\n between(4, 7) |&gt; ends_after(an_interval) == True\n between(5, 8) |&gt; ends_after(an_interval) == True\n between(6, 9) |&gt; ends_after(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after(an_interval) == False\n strictly_before(5) |&gt; ends_after(an_interval) == False\n between(1, 4) |&gt; ends_after(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after(an_interval) == False\n strictly_before(6) |&gt; ends_after(an_interval) == False\n between(2, 5) |&gt; ends_after(an_interval) == False\n strictly_between(3, 6) |&gt; ends_after(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_after"},{"doc":"time_util/cheap/interval","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after_or_at(an_interval) == True\n after(5) |&gt; ends_after_or_at(an_interval) == True\n after(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(3) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(4) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(5) |&gt; ends_after_or_at(an_interval) == True\n before(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(7) |&gt; ends_after_or_at(an_interval) == True\n between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n between(6, 9) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_after_or_at(an_interval) == True\n between(2, 5) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after_or_at(an_interval) == False\n strictly_before(5) |&gt; ends_after_or_at(an_interval) == False\n between(1, 4) |&gt; ends_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_after_or_at"},{"doc":"time_util/cheap/interval","title":"ends_before","content":"ends_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before(an_interval) == True\n strictly_before(5) |&gt; ends_before(an_interval) == True\n between(1, 4) |&gt; ends_before(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before(an_interval) == False\n after(5) |&gt; ends_before(an_interval) == False\n after(6) |&gt; ends_before(an_interval) == False\n strictly_after(3) |&gt; ends_before(an_interval) == False\n strictly_after(4) |&gt; ends_before(an_interval) == False\n strictly_after(5) |&gt; ends_before(an_interval) == False\n before(6) |&gt; ends_before(an_interval) == False\n strictly_before(7) |&gt; ends_before(an_interval) == False\n between(3, 6) |&gt; ends_before(an_interval) == False\n between(4, 7) |&gt; ends_before(an_interval) == False\n between(5, 8) |&gt; ends_before(an_interval) == False\n between(6, 9) |&gt; ends_before(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before(an_interval) == False\n strictly_before(6) |&gt; ends_before(an_interval) == False\n between(2, 5) |&gt; ends_before(an_interval) == False\n strictly_between(3, 6) |&gt; ends_before(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_before"},{"doc":"time_util/cheap/interval","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(5) |&gt; ends_before_or_at(an_interval) == True\n between(1, 4) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_before_or_at(an_interval) == True\n between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(an_interval) == False\n after(5) |&gt; ends_before_or_at(an_interval) == False\n after(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(3) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(4) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(5) |&gt; ends_before_or_at(an_interval) == False\n before(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_before(7) |&gt; ends_before_or_at(an_interval) == False\n between(3, 6) |&gt; ends_before_or_at(an_interval) == False\n between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n between(6, 9) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_before_or_at"},{"doc":"time_util/cheap/interval","title":"is_after","content":"is_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval is **after** another interval.\n This function is an alias for `starts_after`.","url":"time_util/cheap/interval.html#is_after"},{"doc":"time_util/cheap/interval","title":"is_after_or_at","content":"is_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** another interval.\n This function is an alias for `starts_after_or_at`.","url":"time_util/cheap/interval.html#is_after_or_at"},{"doc":"time_util/cheap/interval","title":"is_before","content":"is_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before** another interval.\n This function is an alias for `ends_before`.","url":"time_util/cheap/interval.html#is_before"},{"doc":"time_util/cheap/interval","title":"is_before_or_at","content":"is_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** another interval.\n This function is an alias for `ends_before_or_at`.","url":"time_util/cheap/interval.html#is_before_or_at"},{"doc":"time_util/cheap/interval","title":"starts_after","content":"starts_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval starts **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after(an_interval) == True\n between(6, 9) |&gt; starts_after(an_interval) == True\n strictly_after(5) |&gt; starts_after(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after(an_interval) == False\n strictly_after(3) |&gt; starts_after(an_interval) == False\n before(4) |&gt; starts_after(an_interval) == False\n before(5) |&gt; starts_after(an_interval) == False\n before(6) |&gt; starts_after(an_interval) == False\n strictly_before(5) |&gt; starts_after(an_interval) == False\n strictly_before(6) |&gt; starts_after(an_interval) == False\n strictly_before(7) |&gt; starts_after(an_interval) == False\n between(1, 4) |&gt; starts_after(an_interval) == False\n between(2, 5) |&gt; starts_after(an_interval) == False\n between(3, 6) |&gt; starts_after(an_interval) == False\n between(4, 7) |&gt; starts_after(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after(an_interval) == False\n between(5, 8) |&gt; starts_after(an_interval) == False\n strictly_after(4) |&gt; starts_after(an_interval) == False\n strictly_between(4, 7) |&gt; starts_after(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_after"},{"doc":"time_util/cheap/interval","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(5) |&gt; starts_after_or_at(an_interval) == True\n between(6, 9) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_after_or_at(an_interval) == True\n between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(an_interval) == False\n strictly_after(3) |&gt; starts_after_or_at(an_interval) == False\n before(4) |&gt; starts_after_or_at(an_interval) == False\n before(5) |&gt; starts_after_or_at(an_interval) == False\n before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(5) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(7) |&gt; starts_after_or_at(an_interval) == False\n between(1, 4) |&gt; starts_after_or_at(an_interval) == False\n between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n between(4, 7) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_after_or_at"},{"doc":"time_util/cheap/interval","title":"starts_before","content":"starts_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before(an_interval) == True\n strictly_after(3) |&gt; starts_before(an_interval) == True\n before(4) |&gt; starts_before(an_interval) == True\n before(5) |&gt; starts_before(an_interval) == True\n before(6) |&gt; starts_before(an_interval) == True\n strictly_before(5) |&gt; starts_before(an_interval) == True\n strictly_before(6) |&gt; starts_before(an_interval) == True\n strictly_before(7) |&gt; starts_before(an_interval) == True\n between(1, 4) |&gt; starts_before(an_interval) == True\n between(2, 5) |&gt; starts_before(an_interval) == True\n between(3, 6) |&gt; starts_before(an_interval) == True\n between(4, 7) |&gt; starts_before(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before(an_interval) == False\n strictly_after(5) |&gt; starts_before(an_interval) == False\n between(6, 9) |&gt; starts_before(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before(an_interval) == False\n strictly_after(4) |&gt; starts_before(an_interval) == False\n between(5, 8) |&gt; starts_before(an_interval) == False\n strictly_between(4, 7) |&gt; starts_before(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_before"},{"doc":"time_util/cheap/interval","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(3) |&gt; starts_before_or_at(an_interval) == True\n before(4) |&gt; starts_before_or_at(an_interval) == True\n before(5) |&gt; starts_before_or_at(an_interval) == True\n before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(7) |&gt; starts_before_or_at(an_interval) == True\n between(1, 4) |&gt; starts_before_or_at(an_interval) == True\n between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_before_or_at(an_interval) == True\n between(5, 8) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before_or_at(an_interval) == False\n strictly_after(5) |&gt; starts_before_or_at(an_interval) == False\n between(6, 9) |&gt; starts_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_before_or_at"},{"doc":"time_util/cheap/interval","title":"time_util/cheap/interval","content":" A slightly cheaper version of `time_util/interval` in terms of memory and CPU usage.","url":"time_util/cheap/interval.html"},{"doc":"test_cheap_posixtime_util","title":"test_cheap_posixtime_util","content":" ```\n ┍━ test_cheap_posixtime_util ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n │ PASS [mem:  831057, cpu: 305559109] interval_starts_after_deadline\n │ PASS [mem:  827453, cpu: 304344725] interval_starts_after_or_at_deadline\n │ PASS [mem:  822047, cpu: 302683549] interval_starts_before_deadline\n │ PASS [mem:  818443, cpu: 301469165] interval_starts_before_or_at_deadline\n │ PASS [mem:  822047, cpu: 302683549] interval_ends_after_deadline\n │ PASS [mem:  818443, cpu: 301469165] interval_ends_after_or_at_deadline\n │ PASS [mem:  831057, cpu: 305559109] interval_ends_before_deadline\n │ PASS [mem:  827453, cpu: 304344725] interval_ends_before_or_at_deadline\n ┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8 tests | 8 passed | 0 failed\n ```","url":"test_cheap_posixtime_util.html"},{"doc":"time_util/cheap/posixtime","title":"ends_after","content":"ends_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **after** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after(5) == True\n after(5) |&gt; ends_after(5) == True\n after(6) |&gt; ends_after(5) == True\n strictly_after(3) |&gt; ends_after(5) == True\n strictly_after(4) |&gt; ends_after(5) == True\n strictly_after(5) |&gt; ends_after(5) == True\n before(6) |&gt; ends_after(5) == True\n strictly_before(7) |&gt; ends_after(5) == True\n between(3, 6) |&gt; ends_after(5) == True\n between(4, 7) |&gt; ends_after(5) == True\n between(5, 8) |&gt; ends_after(5) == True\n between(6, 9) |&gt; ends_after(5) == True\n strictly_between(4, 7) |&gt; ends_after(5) == True\n strictly_between(5, 8) |&gt; ends_after(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after(5) == False\n strictly_before(5) |&gt; ends_after(5) == False\n between(1, 4) |&gt; ends_after(5) == False\n strictly_between(2, 5) |&gt; ends_after(5) == False\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after(5) == False\n strictly_before(6) |&gt; ends_after(5) == False\n between(2, 5) |&gt; ends_after(5) == False\n strictly_between(3, 6) |&gt; ends_after(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_after"},{"doc":"time_util/cheap/posixtime","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after_or_at(5) == True\n after(5) |&gt; ends_after_or_at(5) == True\n after(6) |&gt; ends_after_or_at(5) == True\n strictly_after(3) |&gt; ends_after_or_at(5) == True\n strictly_after(4) |&gt; ends_after_or_at(5) == True\n strictly_after(5) |&gt; ends_after_or_at(5) == True\n before(6) |&gt; ends_after_or_at(5) == True\n strictly_before(7) |&gt; ends_after_or_at(5) == True\n between(3, 6) |&gt; ends_after_or_at(5) == True\n between(4, 7) |&gt; ends_after_or_at(5) == True\n between(5, 8) |&gt; ends_after_or_at(5) == True\n between(6, 9) |&gt; ends_after_or_at(5) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(5) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(5) == True\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after_or_at(5) == True\n strictly_before(6) |&gt; ends_after_or_at(5) == True\n between(2, 5) |&gt; ends_after_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after_or_at(5) == False\n strictly_before(5) |&gt; ends_after_or_at(5) == False\n between(1, 4) |&gt; ends_after_or_at(5) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"ends_before","content":"ends_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **before** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before(5) == True\n strictly_before(5) |&gt; ends_before(5) == True\n between(1, 4) |&gt; ends_before(5) == True\n strictly_between(2, 5) |&gt; ends_before(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before(5) == False\n after(5) |&gt; ends_before(5) == False\n after(6) |&gt; ends_before(5) == False\n strictly_after(3) |&gt; ends_before(5) == False\n strictly_after(4) |&gt; ends_before(5) == False\n strictly_after(5) |&gt; ends_before(5) == False\n before(6) |&gt; ends_before(5) == False\n strictly_before(7) |&gt; ends_before(5) == False\n between(3, 6) |&gt; ends_before(5) == False\n between(4, 7) |&gt; ends_before(5) == False\n between(5, 8) |&gt; ends_before(5) == False\n between(6, 9) |&gt; ends_before(5) == False\n strictly_between(4, 7) |&gt; ends_before(5) == False\n strictly_between(5, 8) |&gt; ends_before(5) == False\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before(5) == False\n strictly_before(6) |&gt; ends_before(5) == False\n between(2, 5) |&gt; ends_before(5) == False\n strictly_between(3, 6) |&gt; ends_before(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_before"},{"doc":"time_util/cheap/posixtime","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before_or_at(5) == True\n strictly_before(5) |&gt; ends_before_or_at(5) == True\n between(1, 4) |&gt; ends_before_or_at(5) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(5) == True\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before_or_at(5) == True\n strictly_before(6) |&gt; ends_before_or_at(5) == True\n between(2, 5) |&gt; ends_before_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(5) == False\n after(5) |&gt; ends_before_or_at(5) == False\n after(6) |&gt; ends_before_or_at(5) == False\n strictly_after(3) |&gt; ends_before_or_at(5) == False\n strictly_after(4) |&gt; ends_before_or_at(5) == False\n strictly_after(5) |&gt; ends_before_or_at(5) == False\n before(6) |&gt; ends_before_or_at(5) == False\n strictly_before(7) |&gt; ends_before_or_at(5) == False\n between(3, 6) |&gt; ends_before_or_at(5) == False\n between(4, 7) |&gt; ends_before_or_at(5) == False\n between(5, 8) |&gt; ends_before_or_at(5) == False\n between(6, 9) |&gt; ends_before_or_at(5) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(5) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"is_after","content":"is_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after** the specified `PosixTime`.\n This function is an alias for `starts_after`.","url":"time_util/cheap/posixtime.html#is_after"},{"doc":"time_util/cheap/posixtime","title":"is_after_or_at","content":"is_after_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** the specified `PosixTime`.\n This function is an alias for `starts_after_or_at`.","url":"time_util/cheap/posixtime.html#is_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"is_before","content":"is_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before** the specified `PosixTime`.\n This function is an alias for `ends_before`.","url":"time_util/cheap/posixtime.html#is_before"},{"doc":"time_util/cheap/posixtime","title":"is_before_or_at","content":"is_before_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** the specified `PosixTime`.\n This function is an alias for `ends_before_or_at`.","url":"time_util/cheap/posixtime.html#is_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"starts_after","content":"starts_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **after** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after(5) == True\n between(6, 9) |&gt; starts_after(5) == True\n strictly_after(5) |&gt; starts_after(5) == True\n strictly_between(5, 8) |&gt; starts_after(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after(5) == False\n strictly_after(3) |&gt; starts_after(5) == False\n before(4) |&gt; starts_after(5) == False\n before(5) |&gt; starts_after(5) == False\n before(6) |&gt; starts_after(5) == False\n strictly_before(5) |&gt; starts_after(5) == False\n strictly_before(6) |&gt; starts_after(5) == False\n strictly_before(7) |&gt; starts_after(5) == False\n between(1, 4) |&gt; starts_after(5) == False\n between(2, 5) |&gt; starts_after(5) == False\n between(3, 6) |&gt; starts_after(5) == False\n between(4, 7) |&gt; starts_after(5) == False\n strictly_between(2, 5) |&gt; starts_after(5) == False\n strictly_between(3, 6) |&gt; starts_after(5) == False\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after(5) == False\n between(5, 8) |&gt; starts_after(5) == False\n strictly_after(4) |&gt; starts_after(5) == False\n strictly_between(4, 7) |&gt; starts_after(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_after"},{"doc":"time_util/cheap/posixtime","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after_or_at(5) == True\n strictly_after(5) |&gt; starts_after_or_at(5) == True\n between(6, 9) |&gt; starts_after_or_at(5) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(5) == True\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after_or_at(5) == True\n strictly_after(4) |&gt; starts_after_or_at(5) == True\n between(5, 8) |&gt; starts_after_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(5) == False\n strictly_after(3) |&gt; starts_after_or_at(5) == False\n before(4) |&gt; starts_after_or_at(5) == False\n before(5) |&gt; starts_after_or_at(5) == False\n before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(5) |&gt; starts_after_or_at(5) == False\n strictly_before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(7) |&gt; starts_after_or_at(5) == False\n between(1, 4) |&gt; starts_after_or_at(5) == False\n between(2, 5) |&gt; starts_after_or_at(5) == False\n between(3, 6) |&gt; starts_after_or_at(5) == False\n between(4, 7) |&gt; starts_after_or_at(5) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(5) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"starts_before","content":"starts_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **before** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before(5) == True\n strictly_after(3) |&gt; starts_before(5) == True\n before(4) |&gt; starts_before(5) == True\n before(5) |&gt; starts_before(5) == True\n before(6) |&gt; starts_before(5) == True\n strictly_before(5) |&gt; starts_before(5) == True\n strictly_before(6) |&gt; starts_before(5) == True\n strictly_before(7) |&gt; starts_before(5) == True\n between(1, 4) |&gt; starts_before(5) == True\n between(2, 5) |&gt; starts_before(5) == True\n between(3, 6) |&gt; starts_before(5) == True\n between(4, 7) |&gt; starts_before(5) == True\n strictly_between(2, 5) |&gt; starts_before(5) == True\n strictly_between(3, 6) |&gt; starts_before(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before(5) == False\n strictly_after(5) |&gt; starts_before(5) == False\n between(6, 9) |&gt; starts_before(5) == False\n strictly_between(5, 8) |&gt; starts_before(5) == False\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before(5) == False\n strictly_after(4) |&gt; starts_before(5) == False\n between(5, 8) |&gt; starts_before(5) == False\n strictly_between(4, 7) |&gt; starts_before(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_before"},{"doc":"time_util/cheap/posixtime","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before_or_at(5) == True\n strictly_after(3) |&gt; starts_before_or_at(5) == True\n before(4) |&gt; starts_before_or_at(5) == True\n before(5) |&gt; starts_before_or_at(5) == True\n before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(5) |&gt; starts_before_or_at(5) == True\n strictly_before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(7) |&gt; starts_before_or_at(5) == True\n between(1, 4) |&gt; starts_before_or_at(5) == True\n between(2, 5) |&gt; starts_before_or_at(5) == True\n between(3, 6) |&gt; starts_before_or_at(5) == True\n between(4, 7) |&gt; starts_before_or_at(5) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(5) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(5) == True\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before_or_at(5) == True\n strictly_after(4) |&gt; starts_before_or_at(5) == True\n between(5, 8) |&gt; starts_before_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before_or_at(5) == False\n strictly_after(5) |&gt; starts_before_or_at(5) == False\n between(6, 9) |&gt; starts_before_or_at(5) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"time_util/cheap/posixtime","content":" A cheaper version of `time_util/posixtime` in terms of memory and CPU usage.","url":"time_util/cheap/posixtime.html"},{"doc":"test_cheap_interval_util","title":"test_cheap_interval_util","content":" ```\n ┍━ test_cheap_interval_util ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n │ PASS [mem: 1830243, cpu: 682955348] interval_starts_after_deadline\n │ PASS [mem: 1826639, cpu: 681740964] interval_starts_after_or_at_deadline\n │ PASS [mem: 1808033, cpu: 677043788] interval_starts_before_deadline\n │ PASS [mem: 1804429, cpu: 675829404] interval_starts_before_or_at_deadline\n │ PASS [mem: 1796237, cpu: 672006062] interval_ends_after_deadline\n │ PASS [mem: 1792633, cpu: 670791678] interval_ends_after_or_at_deadline\n │ PASS [mem: 1818447, cpu: 677917622] interval_ends_before_deadline\n │ PASS [mem: 1814843, cpu: 676703238] interval_ends_before_or_at_deadline\n ┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8 tests | 8 passed | 0 failed\n ```","url":"test_cheap_interval_util.html"},{"doc":"time_util/unsafe/bound","title":"finite_end_of","content":"finite_end_of(interval: Interval&lt;PosixTime&gt;) -&gt; PosixTime\n Returns the **normalized max-bound** `PosixTime` of `interval`\n &gt; ⚠️ **WARNING**:\n &gt; Will panic if max-bound is not Finite","url":"time_util/unsafe/bound.html#finite_end_of"},{"doc":"time_util/unsafe/bound","title":"finite_start_of","content":"finite_start_of(interval: Interval&lt;PosixTime&gt;) -&gt; PosixTime\n Returns the **normalized min-bound** `Posixtime` of `interval`\n &gt; ⚠️ **WARNING**:\n &gt; Will panic if min-bound is not Finite","url":"time_util/unsafe/bound.html#finite_start_of"},{"doc":"time_util/unsafe/bound","title":"time_util/unsafe/bound","content":" A convenient way to unwrap `Finite(PosixTime)` from an `Interval`,\n but will **panic** if the interval bound is not `Finite`.","url":"time_util/unsafe/bound.html"},{"doc":"time_util/posixtime","title":"ends_after","content":"ends_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **after** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after(5) == True\n after(5) |&gt; ends_after(5) == True\n after(6) |&gt; ends_after(5) == True\n strictly_after(3) |&gt; ends_after(5) == True\n strictly_after(4) |&gt; ends_after(5) == True\n strictly_after(5) |&gt; ends_after(5) == True\n before(6) |&gt; ends_after(5) == True\n strictly_before(7) |&gt; ends_after(5) == True\n between(3, 6) |&gt; ends_after(5) == True\n between(4, 7) |&gt; ends_after(5) == True\n between(5, 8) |&gt; ends_after(5) == True\n between(6, 9) |&gt; ends_after(5) == True\n strictly_between(4, 7) |&gt; ends_after(5) == True\n strictly_between(5, 8) |&gt; ends_after(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after(5) == False\n strictly_before(5) |&gt; ends_after(5) == False\n between(1, 4) |&gt; ends_after(5) == False\n strictly_between(2, 5) |&gt; ends_after(5) == False\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after(5) == False\n strictly_before(6) |&gt; ends_after(5) == False\n between(2, 5) |&gt; ends_after(5) == False\n strictly_between(3, 6) |&gt; ends_after(5) == False\n ```","url":"time_util/posixtime.html#ends_after"},{"doc":"time_util/posixtime","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after_or_at(5) == True\n after(5) |&gt; ends_after_or_at(5) == True\n after(6) |&gt; ends_after_or_at(5) == True\n strictly_after(3) |&gt; ends_after_or_at(5) == True\n strictly_after(4) |&gt; ends_after_or_at(5) == True\n strictly_after(5) |&gt; ends_after_or_at(5) == True\n before(6) |&gt; ends_after_or_at(5) == True\n strictly_before(7) |&gt; ends_after_or_at(5) == True\n between(3, 6) |&gt; ends_after_or_at(5) == True\n between(4, 7) |&gt; ends_after_or_at(5) == True\n between(5, 8) |&gt; ends_after_or_at(5) == True\n between(6, 9) |&gt; ends_after_or_at(5) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(5) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(5) == True\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after_or_at(5) == True\n strictly_before(6) |&gt; ends_after_or_at(5) == True\n between(2, 5) |&gt; ends_after_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after_or_at(5) == False\n strictly_before(5) |&gt; ends_after_or_at(5) == False\n between(1, 4) |&gt; ends_after_or_at(5) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(5) == False\n ```","url":"time_util/posixtime.html#ends_after_or_at"},{"doc":"time_util/posixtime","title":"ends_before","content":"ends_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **before** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before(5) == True\n strictly_before(5) |&gt; ends_before(5) == True\n between(1, 4) |&gt; ends_before(5) == True\n strictly_between(2, 5) |&gt; ends_before(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before(5) == False\n after(5) |&gt; ends_before(5) == False\n after(6) |&gt; ends_before(5) == False\n strictly_after(3) |&gt; ends_before(5) == False\n strictly_after(4) |&gt; ends_before(5) == False\n strictly_after(5) |&gt; ends_before(5) == False\n before(6) |&gt; ends_before(5) == False\n strictly_before(7) |&gt; ends_before(5) == False\n between(3, 6) |&gt; ends_before(5) == False\n between(4, 7) |&gt; ends_before(5) == False\n between(5, 8) |&gt; ends_before(5) == False\n between(6, 9) |&gt; ends_before(5) == False\n strictly_between(4, 7) |&gt; ends_before(5) == False\n strictly_between(5, 8) |&gt; ends_before(5) == False\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before(5) == False\n strictly_before(6) |&gt; ends_before(5) == False\n between(2, 5) |&gt; ends_before(5) == False\n strictly_between(3, 6) |&gt; ends_before(5) == False\n ```","url":"time_util/posixtime.html#ends_before"},{"doc":"time_util/posixtime","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before_or_at(5) == True\n strictly_before(5) |&gt; ends_before_or_at(5) == True\n between(1, 4) |&gt; ends_before_or_at(5) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(5) == True\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before_or_at(5) == True\n strictly_before(6) |&gt; ends_before_or_at(5) == True\n between(2, 5) |&gt; ends_before_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(5) == False\n after(5) |&gt; ends_before_or_at(5) == False\n after(6) |&gt; ends_before_or_at(5) == False\n strictly_after(3) |&gt; ends_before_or_at(5) == False\n strictly_after(4) |&gt; ends_before_or_at(5) == False\n strictly_after(5) |&gt; ends_before_or_at(5) == False\n before(6) |&gt; ends_before_or_at(5) == False\n strictly_before(7) |&gt; ends_before_or_at(5) == False\n between(3, 6) |&gt; ends_before_or_at(5) == False\n between(4, 7) |&gt; ends_before_or_at(5) == False\n between(5, 8) |&gt; ends_before_or_at(5) == False\n between(6, 9) |&gt; ends_before_or_at(5) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(5) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(5) == False\n ```","url":"time_util/posixtime.html#ends_before_or_at"},{"doc":"time_util/posixtime","title":"is_after","content":"is_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after** the specified `PosixTime`.\n This function is an alias for `starts_after`.","url":"time_util/posixtime.html#is_after"},{"doc":"time_util/posixtime","title":"is_after_or_at","content":"is_after_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** the specified `PosixTime`.\n This function is an alias for `starts_after_or_at`.","url":"time_util/posixtime.html#is_after_or_at"},{"doc":"time_util/posixtime","title":"is_before","content":"is_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before** the specified `PosixTime`.\n This function is an alias for `ends_before`.","url":"time_util/posixtime.html#is_before"},{"doc":"time_util/posixtime","title":"is_before_or_at","content":"is_before_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** the specified `PosixTime`.\n This function is an alias for `ends_before_or_at`.","url":"time_util/posixtime.html#is_before_or_at"},{"doc":"time_util/posixtime","title":"starts_after","content":"starts_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **after** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after(5) == True\n between(6, 9) |&gt; starts_after(5) == True\n strictly_after(5) |&gt; starts_after(5) == True\n strictly_between(5, 8) |&gt; starts_after(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after(5) == False\n strictly_after(3) |&gt; starts_after(5) == False\n before(4) |&gt; starts_after(5) == False\n before(5) |&gt; starts_after(5) == False\n before(6) |&gt; starts_after(5) == False\n strictly_before(5) |&gt; starts_after(5) == False\n strictly_before(6) |&gt; starts_after(5) == False\n strictly_before(7) |&gt; starts_after(5) == False\n between(1, 4) |&gt; starts_after(5) == False\n between(2, 5) |&gt; starts_after(5) == False\n between(3, 6) |&gt; starts_after(5) == False\n between(4, 7) |&gt; starts_after(5) == False\n strictly_between(2, 5) |&gt; starts_after(5) == False\n strictly_between(3, 6) |&gt; starts_after(5) == False\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after(5) == False\n between(5, 8) |&gt; starts_after(5) == False\n strictly_after(4) |&gt; starts_after(5) == False\n strictly_between(4, 7) |&gt; starts_after(5) == False\n ```","url":"time_util/posixtime.html#starts_after"},{"doc":"time_util/posixtime","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after_or_at(5) == True\n strictly_after(5) |&gt; starts_after_or_at(5) == True\n between(6, 9) |&gt; starts_after_or_at(5) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(5) == True\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after_or_at(5) == True\n strictly_after(4) |&gt; starts_after_or_at(5) == True\n between(5, 8) |&gt; starts_after_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(5) == False\n strictly_after(3) |&gt; starts_after_or_at(5) == False\n before(4) |&gt; starts_after_or_at(5) == False\n before(5) |&gt; starts_after_or_at(5) == False\n before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(5) |&gt; starts_after_or_at(5) == False\n strictly_before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(7) |&gt; starts_after_or_at(5) == False\n between(1, 4) |&gt; starts_after_or_at(5) == False\n between(2, 5) |&gt; starts_after_or_at(5) == False\n between(3, 6) |&gt; starts_after_or_at(5) == False\n between(4, 7) |&gt; starts_after_or_at(5) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(5) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(5) == False\n ```","url":"time_util/posixtime.html#starts_after_or_at"},{"doc":"time_util/posixtime","title":"starts_before","content":"starts_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **before** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before(5) == True\n strictly_after(3) |&gt; starts_before(5) == True\n before(4) |&gt; starts_before(5) == True\n before(5) |&gt; starts_before(5) == True\n before(6) |&gt; starts_before(5) == True\n strictly_before(5) |&gt; starts_before(5) == True\n strictly_before(6) |&gt; starts_before(5) == True\n strictly_before(7) |&gt; starts_before(5) == True\n between(1, 4) |&gt; starts_before(5) == True\n between(2, 5) |&gt; starts_before(5) == True\n between(3, 6) |&gt; starts_before(5) == True\n between(4, 7) |&gt; starts_before(5) == True\n strictly_between(2, 5) |&gt; starts_before(5) == True\n strictly_between(3, 6) |&gt; starts_before(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before(5) == False\n strictly_after(5) |&gt; starts_before(5) == False\n between(6, 9) |&gt; starts_before(5) == False\n strictly_between(5, 8) |&gt; starts_before(5) == False\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before(5) == False\n strictly_after(4) |&gt; starts_before(5) == False\n between(5, 8) |&gt; starts_before(5) == False\n strictly_between(4, 7) |&gt; starts_before(5) == False\n ```","url":"time_util/posixtime.html#starts_before"},{"doc":"time_util/posixtime","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before_or_at(5) == True\n strictly_after(3) |&gt; starts_before_or_at(5) == True\n before(4) |&gt; starts_before_or_at(5) == True\n before(5) |&gt; starts_before_or_at(5) == True\n before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(5) |&gt; starts_before_or_at(5) == True\n strictly_before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(7) |&gt; starts_before_or_at(5) == True\n between(1, 4) |&gt; starts_before_or_at(5) == True\n between(2, 5) |&gt; starts_before_or_at(5) == True\n between(3, 6) |&gt; starts_before_or_at(5) == True\n between(4, 7) |&gt; starts_before_or_at(5) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(5) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(5) == True\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before_or_at(5) == True\n strictly_after(4) |&gt; starts_before_or_at(5) == True\n between(5, 8) |&gt; starts_before_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before_or_at(5) == False\n strictly_after(5) |&gt; starts_before_or_at(5) == False\n between(6, 9) |&gt; starts_before_or_at(5) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(5) == False\n ```","url":"time_util/posixtime.html#starts_before_or_at"},{"doc":"time_util/posixtime","title":"time_util/posixtime","content":" A utility module to help comparing some intervals to specified deadlines.\n The code reuses `time_util/interval` module, so there&#39;s only one generic\n internal function to handle all logic variations at the cost of memory and\n CPU usage.\n\n Use `time_util/cheap/posixtime` instead for cheaper memory and CPU usage.","url":"time_util/posixtime.html"},{"doc":"time_util/interval","title":"ends_after","content":"ends_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after(an_interval) == True\n after(5) |&gt; ends_after(an_interval) == True\n after(6) |&gt; ends_after(an_interval) == True\n strictly_after(3) |&gt; ends_after(an_interval) == True\n strictly_after(4) |&gt; ends_after(an_interval) == True\n strictly_after(5) |&gt; ends_after(an_interval) == True\n before(6) |&gt; ends_after(an_interval) == True\n strictly_before(7) |&gt; ends_after(an_interval) == True\n between(3, 6) |&gt; ends_after(an_interval) == True\n between(4, 7) |&gt; ends_after(an_interval) == True\n between(5, 8) |&gt; ends_after(an_interval) == True\n between(6, 9) |&gt; ends_after(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after(an_interval) == False\n strictly_before(5) |&gt; ends_after(an_interval) == False\n between(1, 4) |&gt; ends_after(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after(an_interval) == False\n strictly_before(6) |&gt; ends_after(an_interval) == False\n between(2, 5) |&gt; ends_after(an_interval) == False\n strictly_between(3, 6) |&gt; ends_after(an_interval) == False\n ```","url":"time_util/interval.html#ends_after"},{"doc":"time_util/interval","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after_or_at(an_interval) == True\n after(5) |&gt; ends_after_or_at(an_interval) == True\n after(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(3) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(4) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(5) |&gt; ends_after_or_at(an_interval) == True\n before(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(7) |&gt; ends_after_or_at(an_interval) == True\n between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n between(6, 9) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_after_or_at(an_interval) == True\n between(2, 5) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after_or_at(an_interval) == False\n strictly_before(5) |&gt; ends_after_or_at(an_interval) == False\n between(1, 4) |&gt; ends_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(an_interval) == False\n ```","url":"time_util/interval.html#ends_after_or_at"},{"doc":"time_util/interval","title":"ends_before","content":"ends_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before(an_interval) == True\n strictly_before(5) |&gt; ends_before(an_interval) == True\n between(1, 4) |&gt; ends_before(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before(an_interval) == False\n after(5) |&gt; ends_before(an_interval) == False\n after(6) |&gt; ends_before(an_interval) == False\n strictly_after(3) |&gt; ends_before(an_interval) == False\n strictly_after(4) |&gt; ends_before(an_interval) == False\n strictly_after(5) |&gt; ends_before(an_interval) == False\n before(6) |&gt; ends_before(an_interval) == False\n strictly_before(7) |&gt; ends_before(an_interval) == False\n between(3, 6) |&gt; ends_before(an_interval) == False\n between(4, 7) |&gt; ends_before(an_interval) == False\n between(5, 8) |&gt; ends_before(an_interval) == False\n between(6, 9) |&gt; ends_before(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before(an_interval) == False\n strictly_before(6) |&gt; ends_before(an_interval) == False\n between(2, 5) |&gt; ends_before(an_interval) == False\n strictly_between(3, 6) |&gt; ends_before(an_interval) == False\n ```","url":"time_util/interval.html#ends_before"},{"doc":"time_util/interval","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(5) |&gt; ends_before_or_at(an_interval) == True\n between(1, 4) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_before_or_at(an_interval) == True\n between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(an_interval) == False\n after(5) |&gt; ends_before_or_at(an_interval) == False\n after(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(3) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(4) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(5) |&gt; ends_before_or_at(an_interval) == False\n before(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_before(7) |&gt; ends_before_or_at(an_interval) == False\n between(3, 6) |&gt; ends_before_or_at(an_interval) == False\n between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n between(6, 9) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n ```","url":"time_util/interval.html#ends_before_or_at"},{"doc":"time_util/interval","title":"is_after","content":"is_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval is **after** another interval.\n This function is an alias for `starts_after`.","url":"time_util/interval.html#is_after"},{"doc":"time_util/interval","title":"is_after_or_at","content":"is_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** another interval.\n This function is an alias for `starts_after_or_at`.","url":"time_util/interval.html#is_after_or_at"},{"doc":"time_util/interval","title":"is_before","content":"is_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before** another interval.\n This function is an alias for `ends_before`.","url":"time_util/interval.html#is_before"},{"doc":"time_util/interval","title":"is_before_or_at","content":"is_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** another interval.\n This function is an alias for `ends_before_or_at`.","url":"time_util/interval.html#is_before_or_at"},{"doc":"time_util/interval","title":"starts_after","content":"starts_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval starts **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after(an_interval) == True\n between(6, 9) |&gt; starts_after(an_interval) == True\n strictly_after(5) |&gt; starts_after(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after(an_interval) == False\n strictly_after(3) |&gt; starts_after(an_interval) == False\n before(4) |&gt; starts_after(an_interval) == False\n before(5) |&gt; starts_after(an_interval) == False\n before(6) |&gt; starts_after(an_interval) == False\n strictly_before(5) |&gt; starts_after(an_interval) == False\n strictly_before(6) |&gt; starts_after(an_interval) == False\n strictly_before(7) |&gt; starts_after(an_interval) == False\n between(1, 4) |&gt; starts_after(an_interval) == False\n between(2, 5) |&gt; starts_after(an_interval) == False\n between(3, 6) |&gt; starts_after(an_interval) == False\n between(4, 7) |&gt; starts_after(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after(an_interval) == False\n between(5, 8) |&gt; starts_after(an_interval) == False\n strictly_after(4) |&gt; starts_after(an_interval) == False\n strictly_between(4, 7) |&gt; starts_after(an_interval) == False\n ```","url":"time_util/interval.html#starts_after"},{"doc":"time_util/interval","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(5) |&gt; starts_after_or_at(an_interval) == True\n between(6, 9) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_after_or_at(an_interval) == True\n between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(an_interval) == False\n strictly_after(3) |&gt; starts_after_or_at(an_interval) == False\n before(4) |&gt; starts_after_or_at(an_interval) == False\n before(5) |&gt; starts_after_or_at(an_interval) == False\n before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(5) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(7) |&gt; starts_after_or_at(an_interval) == False\n between(1, 4) |&gt; starts_after_or_at(an_interval) == False\n between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n between(4, 7) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n ```","url":"time_util/interval.html#starts_after_or_at"},{"doc":"time_util/interval","title":"starts_before","content":"starts_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before(an_interval) == True\n strictly_after(3) |&gt; starts_before(an_interval) == True\n before(4) |&gt; starts_before(an_interval) == True\n before(5) |&gt; starts_before(an_interval) == True\n before(6) |&gt; starts_before(an_interval) == True\n strictly_before(5) |&gt; starts_before(an_interval) == True\n strictly_before(6) |&gt; starts_before(an_interval) == True\n strictly_before(7) |&gt; starts_before(an_interval) == True\n between(1, 4) |&gt; starts_before(an_interval) == True\n between(2, 5) |&gt; starts_before(an_interval) == True\n between(3, 6) |&gt; starts_before(an_interval) == True\n between(4, 7) |&gt; starts_before(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before(an_interval) == False\n strictly_after(5) |&gt; starts_before(an_interval) == False\n between(6, 9) |&gt; starts_before(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before(an_interval) == False\n strictly_after(4) |&gt; starts_before(an_interval) == False\n between(5, 8) |&gt; starts_before(an_interval) == False\n strictly_between(4, 7) |&gt; starts_before(an_interval) == False\n ```","url":"time_util/interval.html#starts_before"},{"doc":"time_util/interval","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(3) |&gt; starts_before_or_at(an_interval) == True\n before(4) |&gt; starts_before_or_at(an_interval) == True\n before(5) |&gt; starts_before_or_at(an_interval) == True\n before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(7) |&gt; starts_before_or_at(an_interval) == True\n between(1, 4) |&gt; starts_before_or_at(an_interval) == True\n between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_before_or_at(an_interval) == True\n between(5, 8) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before_or_at(an_interval) == False\n strictly_after(5) |&gt; starts_before_or_at(an_interval) == False\n between(6, 9) |&gt; starts_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(an_interval) == False\n ```","url":"time_util/interval.html#starts_before_or_at"},{"doc":"time_util/interval","title":"time_util/interval","content":" A utility module to help comparing the precedence between intervals.\n Internally there&#39;s only one generic function to handle all logic\n variations at the cost of memory and CPU usage.\n\n Use `time_util/cheap/interval` instead for a slightly cheaper memory\n and CPU usage.","url":"time_util/interval.html"},{"doc":"test_time_util","title":"test_time_util","content":" ```\n ┍━ test_time_util ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n │ PASS [mem: 2228163, cpu: 836502873] interval_starts_after_deadline\n │ PASS [mem: 2224559, cpu: 835288489] interval_starts_after_or_at_deadline\n │ PASS [mem: 2205953, cpu: 830591313] interval_starts_before_deadline\n │ PASS [mem: 2202349, cpu: 829376929] interval_starts_before_or_at_deadline\n │ PASS [mem: 2194157, cpu: 825553587] interval_ends_after_deadline\n │ PASS [mem: 2190553, cpu: 824339203] interval_ends_after_or_at_deadline\n │ PASS [mem: 2216367, cpu: 831465147] interval_ends_before_deadline\n │ PASS [mem: 2212763, cpu: 830250763] interval_ends_before_or_at_deadline\n ┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8 tests | 8 passed | 0 failed\n ```","url":"test_time_util.html"},{"doc":"time_util/bound","title":"end_bound_type_of","content":"end_bound_type_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Returns the **max-bound type** of `interval` with **normalized** `Finite(PosixTime)`\n\n i.e. returns,\n ```\n let bound = end_of(interval)\n when bound.bound_type is {\n   Finite(time) -&gt;\n     Finite(\n       if bound.is_inclusive {\n         time\n       } else {\n         time - 1\n       },\n     )\n   PositiveInfinity -&gt; PositiveInfinity\n   NegativeInfinity -&gt; NegativeInfinity\n }\n ```","url":"time_util/bound.html#end_bound_type_of"},{"doc":"time_util/bound","title":"end_of","content":"end_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBound&lt;PosixTime&gt;\n Returns the **max-bound** of `interval`\n ```\n end_of(after(5)).bound_type == PositiveInfinity\n end_of(before(5)).bound_type == Finite(5)\n end_of(between(5, 10)).bound_type == Finite(10)\n \n // also works with flipped `between` arguments\n end_of(between(10, 5)).bound_type == Finite(10)\n // as of Aiken v1.0.8-alpha\n ```","url":"time_util/bound.html#end_of"},{"doc":"time_util/bound","title":"finite_end_of","content":"finite_end_of(interval: Interval&lt;PosixTime&gt;) -&gt; Option&lt;PosixTime&gt;\n May return the **normalized max-bound** `PosixTime` of `interval`","url":"time_util/bound.html#finite_end_of"},{"doc":"time_util/bound","title":"finite_start_of","content":"finite_start_of(interval: Interval&lt;PosixTime&gt;) -&gt; Option&lt;PosixTime&gt;\n May return the **normalized min-bound** `Posixtime` of `interval`","url":"time_util/bound.html#finite_start_of"},{"doc":"time_util/bound","title":"start_bound_type_of","content":"start_bound_type_of(\n  interval: Interval&lt;PosixTime&gt;,\n) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Returns the **min-bound type** of `interval` with **normalized** `Finite(PosixTime)`\n\n i.e. returns,\n ```\n let bound = start_of(interval)\n when bound.bound_type is {\n   Finite(time) -&gt;\n     Finite(\n       if bound.is_inclusive {\n         time\n       } else {\n         time + 1\n       },\n     )\n   PositiveInfinity -&gt; PositiveInfinity\n   NegativeInfinity -&gt; NegativeInfinity\n }\n ```","url":"time_util/bound.html#start_bound_type_of"},{"doc":"time_util/bound","title":"start_of","content":"start_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBound&lt;PosixTime&gt;\n Returns the **min-bound** of `interval`\n ```\n start_of(after(5)).bound_type == Finite(5)\n start_of(before(5)).bound_type == NegativeInfinity\n start_of(between(5, 10)).bound_type == Finite(5)\n \n // also works with flipped `between` arguments\n start_of(between(10, 5)).bound_type == Finite(5)\n // as of Aiken v1.0.8-alpha\n ```","url":"time_util/bound.html#start_of"},{"doc":"time_util/bound","title":"time_util/bound","content":"","url":"time_util/bound.html"}]);
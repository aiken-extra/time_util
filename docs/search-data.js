window.Aiken.initSearch([{"doc":"time_util/unsafe/bound","title":"finite_start_of","content":"finite_start_of(interval: Interval&lt;PosixTime&gt;) -&gt; PosixTime\n Returns the **normalized lower-bound** `Posixtime` of an `interval`\n &gt; [!WARNING]\n &gt; Will panic if `lower_bound` is not `Finite`","url":"time_util/unsafe/bound.html#finite_start_of"},{"doc":"time_util/unsafe/bound","title":"finite_end_of","content":"finite_end_of(interval: Interval&lt;PosixTime&gt;) -&gt; PosixTime\n Returns the **normalized upper-bound** `PosixTime` of an `interval`\n &gt; [!WARNING]\n &gt; Will panic if `upper_bound` is not `Finite`","url":"time_util/unsafe/bound.html#finite_end_of"},{"doc":"time_util/unsafe/bound","title":"time_util/unsafe/bound","content":" A convenient way to unwrap `Finite(PosixTime)` from an `Interval`,\n but will **panic** if the interval bound is not `Finite`.","url":"time_util/unsafe/bound.html"},{"doc":"time_util/interval","title":"is_after","content":"is_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval is **after** another interval.\n This function is an alias for `starts_after`.","url":"time_util/interval.html#is_after"},{"doc":"time_util/interval","title":"is_after_or_at","content":"is_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** another interval.\n This function is an alias for `starts_after_or_at`.","url":"time_util/interval.html#is_after_or_at"},{"doc":"time_util/interval","title":"is_before","content":"is_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before** another interval.\n This function is an alias for `ends_before`.","url":"time_util/interval.html#is_before"},{"doc":"time_util/interval","title":"is_before_or_at","content":"is_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** another interval.\n This function is an alias for `ends_before_or_at`.","url":"time_util/interval.html#is_before_or_at"},{"doc":"time_util/interval","title":"starts_after","content":"starts_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval starts **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after(an_interval) == True\n between(6, 9) |&gt; starts_after(an_interval) == True\n strictly_after(5) |&gt; starts_after(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after(an_interval) == False\n strictly_after(3) |&gt; starts_after(an_interval) == False\n before(4) |&gt; starts_after(an_interval) == False\n before(5) |&gt; starts_after(an_interval) == False\n before(6) |&gt; starts_after(an_interval) == False\n strictly_before(5) |&gt; starts_after(an_interval) == False\n strictly_before(6) |&gt; starts_after(an_interval) == False\n strictly_before(7) |&gt; starts_after(an_interval) == False\n between(1, 4) |&gt; starts_after(an_interval) == False\n between(2, 5) |&gt; starts_after(an_interval) == False\n between(3, 6) |&gt; starts_after(an_interval) == False\n between(4, 7) |&gt; starts_after(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after(an_interval) == False\n between(5, 8) |&gt; starts_after(an_interval) == False\n strictly_after(4) |&gt; starts_after(an_interval) == False\n strictly_between(4, 7) |&gt; starts_after(an_interval) == False\n ```","url":"time_util/interval.html#starts_after"},{"doc":"time_util/interval","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(5) |&gt; starts_after_or_at(an_interval) == True\n between(6, 9) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_after_or_at(an_interval) == True\n between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(an_interval) == False\n strictly_after(3) |&gt; starts_after_or_at(an_interval) == False\n before(4) |&gt; starts_after_or_at(an_interval) == False\n before(5) |&gt; starts_after_or_at(an_interval) == False\n before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(5) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(7) |&gt; starts_after_or_at(an_interval) == False\n between(1, 4) |&gt; starts_after_or_at(an_interval) == False\n between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n between(4, 7) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n ```","url":"time_util/interval.html#starts_after_or_at"},{"doc":"time_util/interval","title":"starts_before","content":"starts_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before(an_interval) == True\n strictly_after(3) |&gt; starts_before(an_interval) == True\n before(4) |&gt; starts_before(an_interval) == True\n before(5) |&gt; starts_before(an_interval) == True\n before(6) |&gt; starts_before(an_interval) == True\n strictly_before(5) |&gt; starts_before(an_interval) == True\n strictly_before(6) |&gt; starts_before(an_interval) == True\n strictly_before(7) |&gt; starts_before(an_interval) == True\n between(1, 4) |&gt; starts_before(an_interval) == True\n between(2, 5) |&gt; starts_before(an_interval) == True\n between(3, 6) |&gt; starts_before(an_interval) == True\n between(4, 7) |&gt; starts_before(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before(an_interval) == False\n strictly_after(5) |&gt; starts_before(an_interval) == False\n between(6, 9) |&gt; starts_before(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before(an_interval) == False\n strictly_after(4) |&gt; starts_before(an_interval) == False\n between(5, 8) |&gt; starts_before(an_interval) == False\n strictly_between(4, 7) |&gt; starts_before(an_interval) == False\n ```","url":"time_util/interval.html#starts_before"},{"doc":"time_util/interval","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(3) |&gt; starts_before_or_at(an_interval) == True\n before(4) |&gt; starts_before_or_at(an_interval) == True\n before(5) |&gt; starts_before_or_at(an_interval) == True\n before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(7) |&gt; starts_before_or_at(an_interval) == True\n between(1, 4) |&gt; starts_before_or_at(an_interval) == True\n between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_before_or_at(an_interval) == True\n between(5, 8) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before_or_at(an_interval) == False\n strictly_after(5) |&gt; starts_before_or_at(an_interval) == False\n between(6, 9) |&gt; starts_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(an_interval) == False\n ```","url":"time_util/interval.html#starts_before_or_at"},{"doc":"time_util/interval","title":"ends_after","content":"ends_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after(an_interval) == True\n after(5) |&gt; ends_after(an_interval) == True\n after(6) |&gt; ends_after(an_interval) == True\n strictly_after(3) |&gt; ends_after(an_interval) == True\n strictly_after(4) |&gt; ends_after(an_interval) == True\n strictly_after(5) |&gt; ends_after(an_interval) == True\n before(6) |&gt; ends_after(an_interval) == True\n strictly_before(7) |&gt; ends_after(an_interval) == True\n between(3, 6) |&gt; ends_after(an_interval) == True\n between(4, 7) |&gt; ends_after(an_interval) == True\n between(5, 8) |&gt; ends_after(an_interval) == True\n between(6, 9) |&gt; ends_after(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after(an_interval) == False\n strictly_before(5) |&gt; ends_after(an_interval) == False\n between(1, 4) |&gt; ends_after(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after(an_interval) == False\n strictly_before(6) |&gt; ends_after(an_interval) == False\n between(2, 5) |&gt; ends_after(an_interval) == False\n strictly_between(3, 6) |&gt; ends_after(an_interval) == False\n ```","url":"time_util/interval.html#ends_after"},{"doc":"time_util/interval","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after_or_at(an_interval) == True\n after(5) |&gt; ends_after_or_at(an_interval) == True\n after(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(3) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(4) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(5) |&gt; ends_after_or_at(an_interval) == True\n before(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(7) |&gt; ends_after_or_at(an_interval) == True\n between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n between(6, 9) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_after_or_at(an_interval) == True\n between(2, 5) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after_or_at(an_interval) == False\n strictly_before(5) |&gt; ends_after_or_at(an_interval) == False\n between(1, 4) |&gt; ends_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(an_interval) == False\n ```","url":"time_util/interval.html#ends_after_or_at"},{"doc":"time_util/interval","title":"ends_before","content":"ends_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before(an_interval) == True\n strictly_before(5) |&gt; ends_before(an_interval) == True\n between(1, 4) |&gt; ends_before(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before(an_interval) == False\n after(5) |&gt; ends_before(an_interval) == False\n after(6) |&gt; ends_before(an_interval) == False\n strictly_after(3) |&gt; ends_before(an_interval) == False\n strictly_after(4) |&gt; ends_before(an_interval) == False\n strictly_after(5) |&gt; ends_before(an_interval) == False\n before(6) |&gt; ends_before(an_interval) == False\n strictly_before(7) |&gt; ends_before(an_interval) == False\n between(3, 6) |&gt; ends_before(an_interval) == False\n between(4, 7) |&gt; ends_before(an_interval) == False\n between(5, 8) |&gt; ends_before(an_interval) == False\n between(6, 9) |&gt; ends_before(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before(an_interval) == False\n strictly_before(6) |&gt; ends_before(an_interval) == False\n between(2, 5) |&gt; ends_before(an_interval) == False\n strictly_between(3, 6) |&gt; ends_before(an_interval) == False\n ```","url":"time_util/interval.html#ends_before"},{"doc":"time_util/interval","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(5) |&gt; ends_before_or_at(an_interval) == True\n between(1, 4) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_before_or_at(an_interval) == True\n between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(an_interval) == False\n after(5) |&gt; ends_before_or_at(an_interval) == False\n after(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(3) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(4) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(5) |&gt; ends_before_or_at(an_interval) == False\n before(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_before(7) |&gt; ends_before_or_at(an_interval) == False\n between(3, 6) |&gt; ends_before_or_at(an_interval) == False\n between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n between(6, 9) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n ```","url":"time_util/interval.html#ends_before_or_at"},{"doc":"time_util/interval","title":"time_util/interval","content":" A utility module to help comparing the precedence between intervals.\n Internally there&#39;s only one generic function to handle all logic\n variations at the cost of memory and CPU usage.\n\n Use `time_util/cheap/interval` instead for a slightly cheaper memory\n and CPU usage.","url":"time_util/interval.html"},{"doc":"time_util/cheap/posixtime","title":"is_after","content":"is_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after** the specified `PosixTime`.\n This function is an alias for `starts_after`.","url":"time_util/cheap/posixtime.html#is_after"},{"doc":"time_util/cheap/posixtime","title":"is_after_or_at","content":"is_after_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** the specified `PosixTime`.\n This function is an alias for `starts_after_or_at`.","url":"time_util/cheap/posixtime.html#is_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"is_before","content":"is_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before** the specified `PosixTime`.\n This function is an alias for `ends_before`.","url":"time_util/cheap/posixtime.html#is_before"},{"doc":"time_util/cheap/posixtime","title":"is_before_or_at","content":"is_before_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** the specified `PosixTime`.\n This function is an alias for `ends_before_or_at`.","url":"time_util/cheap/posixtime.html#is_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"starts_after","content":"starts_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **after** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after(5) == True\n between(6, 9) |&gt; starts_after(5) == True\n strictly_after(5) |&gt; starts_after(5) == True\n strictly_between(5, 8) |&gt; starts_after(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after(5) == False\n strictly_after(3) |&gt; starts_after(5) == False\n before(4) |&gt; starts_after(5) == False\n before(5) |&gt; starts_after(5) == False\n before(6) |&gt; starts_after(5) == False\n strictly_before(5) |&gt; starts_after(5) == False\n strictly_before(6) |&gt; starts_after(5) == False\n strictly_before(7) |&gt; starts_after(5) == False\n between(1, 4) |&gt; starts_after(5) == False\n between(2, 5) |&gt; starts_after(5) == False\n between(3, 6) |&gt; starts_after(5) == False\n between(4, 7) |&gt; starts_after(5) == False\n strictly_between(2, 5) |&gt; starts_after(5) == False\n strictly_between(3, 6) |&gt; starts_after(5) == False\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after(5) == False\n between(5, 8) |&gt; starts_after(5) == False\n strictly_after(4) |&gt; starts_after(5) == False\n strictly_between(4, 7) |&gt; starts_after(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_after"},{"doc":"time_util/cheap/posixtime","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after_or_at(5) == True\n strictly_after(5) |&gt; starts_after_or_at(5) == True\n between(6, 9) |&gt; starts_after_or_at(5) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(5) == True\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after_or_at(5) == True\n strictly_after(4) |&gt; starts_after_or_at(5) == True\n between(5, 8) |&gt; starts_after_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(5) == False\n strictly_after(3) |&gt; starts_after_or_at(5) == False\n before(4) |&gt; starts_after_or_at(5) == False\n before(5) |&gt; starts_after_or_at(5) == False\n before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(5) |&gt; starts_after_or_at(5) == False\n strictly_before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(7) |&gt; starts_after_or_at(5) == False\n between(1, 4) |&gt; starts_after_or_at(5) == False\n between(2, 5) |&gt; starts_after_or_at(5) == False\n between(3, 6) |&gt; starts_after_or_at(5) == False\n between(4, 7) |&gt; starts_after_or_at(5) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(5) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"starts_before","content":"starts_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **before** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before(5) == True\n strictly_after(3) |&gt; starts_before(5) == True\n before(4) |&gt; starts_before(5) == True\n before(5) |&gt; starts_before(5) == True\n before(6) |&gt; starts_before(5) == True\n strictly_before(5) |&gt; starts_before(5) == True\n strictly_before(6) |&gt; starts_before(5) == True\n strictly_before(7) |&gt; starts_before(5) == True\n between(1, 4) |&gt; starts_before(5) == True\n between(2, 5) |&gt; starts_before(5) == True\n between(3, 6) |&gt; starts_before(5) == True\n between(4, 7) |&gt; starts_before(5) == True\n strictly_between(2, 5) |&gt; starts_before(5) == True\n strictly_between(3, 6) |&gt; starts_before(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before(5) == False\n strictly_after(5) |&gt; starts_before(5) == False\n between(6, 9) |&gt; starts_before(5) == False\n strictly_between(5, 8) |&gt; starts_before(5) == False\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before(5) == False\n strictly_after(4) |&gt; starts_before(5) == False\n between(5, 8) |&gt; starts_before(5) == False\n strictly_between(4, 7) |&gt; starts_before(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_before"},{"doc":"time_util/cheap/posixtime","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before_or_at(5) == True\n strictly_after(3) |&gt; starts_before_or_at(5) == True\n before(4) |&gt; starts_before_or_at(5) == True\n before(5) |&gt; starts_before_or_at(5) == True\n before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(5) |&gt; starts_before_or_at(5) == True\n strictly_before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(7) |&gt; starts_before_or_at(5) == True\n between(1, 4) |&gt; starts_before_or_at(5) == True\n between(2, 5) |&gt; starts_before_or_at(5) == True\n between(3, 6) |&gt; starts_before_or_at(5) == True\n between(4, 7) |&gt; starts_before_or_at(5) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(5) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(5) == True\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before_or_at(5) == True\n strictly_after(4) |&gt; starts_before_or_at(5) == True\n between(5, 8) |&gt; starts_before_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before_or_at(5) == False\n strictly_after(5) |&gt; starts_before_or_at(5) == False\n between(6, 9) |&gt; starts_before_or_at(5) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#starts_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"ends_after","content":"ends_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **after** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after(5) == True\n after(5) |&gt; ends_after(5) == True\n after(6) |&gt; ends_after(5) == True\n strictly_after(3) |&gt; ends_after(5) == True\n strictly_after(4) |&gt; ends_after(5) == True\n strictly_after(5) |&gt; ends_after(5) == True\n before(6) |&gt; ends_after(5) == True\n strictly_before(7) |&gt; ends_after(5) == True\n between(3, 6) |&gt; ends_after(5) == True\n between(4, 7) |&gt; ends_after(5) == True\n between(5, 8) |&gt; ends_after(5) == True\n between(6, 9) |&gt; ends_after(5) == True\n strictly_between(4, 7) |&gt; ends_after(5) == True\n strictly_between(5, 8) |&gt; ends_after(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after(5) == False\n strictly_before(5) |&gt; ends_after(5) == False\n between(1, 4) |&gt; ends_after(5) == False\n strictly_between(2, 5) |&gt; ends_after(5) == False\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after(5) == False\n strictly_before(6) |&gt; ends_after(5) == False\n between(2, 5) |&gt; ends_after(5) == False\n strictly_between(3, 6) |&gt; ends_after(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_after"},{"doc":"time_util/cheap/posixtime","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after_or_at(5) == True\n after(5) |&gt; ends_after_or_at(5) == True\n after(6) |&gt; ends_after_or_at(5) == True\n strictly_after(3) |&gt; ends_after_or_at(5) == True\n strictly_after(4) |&gt; ends_after_or_at(5) == True\n strictly_after(5) |&gt; ends_after_or_at(5) == True\n before(6) |&gt; ends_after_or_at(5) == True\n strictly_before(7) |&gt; ends_after_or_at(5) == True\n between(3, 6) |&gt; ends_after_or_at(5) == True\n between(4, 7) |&gt; ends_after_or_at(5) == True\n between(5, 8) |&gt; ends_after_or_at(5) == True\n between(6, 9) |&gt; ends_after_or_at(5) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(5) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(5) == True\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after_or_at(5) == True\n strictly_before(6) |&gt; ends_after_or_at(5) == True\n between(2, 5) |&gt; ends_after_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after_or_at(5) == False\n strictly_before(5) |&gt; ends_after_or_at(5) == False\n between(1, 4) |&gt; ends_after_or_at(5) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_after_or_at"},{"doc":"time_util/cheap/posixtime","title":"ends_before","content":"ends_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **before** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before(5) == True\n strictly_before(5) |&gt; ends_before(5) == True\n between(1, 4) |&gt; ends_before(5) == True\n strictly_between(2, 5) |&gt; ends_before(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before(5) == False\n after(5) |&gt; ends_before(5) == False\n after(6) |&gt; ends_before(5) == False\n strictly_after(3) |&gt; ends_before(5) == False\n strictly_after(4) |&gt; ends_before(5) == False\n strictly_after(5) |&gt; ends_before(5) == False\n before(6) |&gt; ends_before(5) == False\n strictly_before(7) |&gt; ends_before(5) == False\n between(3, 6) |&gt; ends_before(5) == False\n between(4, 7) |&gt; ends_before(5) == False\n between(5, 8) |&gt; ends_before(5) == False\n between(6, 9) |&gt; ends_before(5) == False\n strictly_between(4, 7) |&gt; ends_before(5) == False\n strictly_between(5, 8) |&gt; ends_before(5) == False\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before(5) == False\n strictly_before(6) |&gt; ends_before(5) == False\n between(2, 5) |&gt; ends_before(5) == False\n strictly_between(3, 6) |&gt; ends_before(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_before"},{"doc":"time_util/cheap/posixtime","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before_or_at(5) == True\n strictly_before(5) |&gt; ends_before_or_at(5) == True\n between(1, 4) |&gt; ends_before_or_at(5) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(5) == True\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before_or_at(5) == True\n strictly_before(6) |&gt; ends_before_or_at(5) == True\n between(2, 5) |&gt; ends_before_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(5) == False\n after(5) |&gt; ends_before_or_at(5) == False\n after(6) |&gt; ends_before_or_at(5) == False\n strictly_after(3) |&gt; ends_before_or_at(5) == False\n strictly_after(4) |&gt; ends_before_or_at(5) == False\n strictly_after(5) |&gt; ends_before_or_at(5) == False\n before(6) |&gt; ends_before_or_at(5) == False\n strictly_before(7) |&gt; ends_before_or_at(5) == False\n between(3, 6) |&gt; ends_before_or_at(5) == False\n between(4, 7) |&gt; ends_before_or_at(5) == False\n between(5, 8) |&gt; ends_before_or_at(5) == False\n between(6, 9) |&gt; ends_before_or_at(5) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(5) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(5) == False\n ```","url":"time_util/cheap/posixtime.html#ends_before_or_at"},{"doc":"time_util/cheap/posixtime","title":"time_util/cheap/posixtime","content":" A cheaper version of `time_util/posixtime` in terms of memory and CPU usage.","url":"time_util/cheap/posixtime.html"},{"doc":"time_util/bound","title":"start_of","content":"start_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBound&lt;PosixTime&gt;\n Returns the `lower_bound` of an `interval`","url":"time_util/bound.html#start_of"},{"doc":"time_util/bound","title":"start_bound_type_of","content":"start_bound_type_of(\n  interval: Interval&lt;PosixTime&gt;,\n) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Returns the `lower_bound` type of an `interval` with **normalized** `Finite(PosixTime)`\n\n i.e. returns,\n ```\n let bound = start_of(interval)\n when bound.bound_type is {\n   Finite(time) -&gt;\n     Finite(\n       if bound.is_inclusive {\n         time\n       } else {\n         time + 1\n       },\n     )\n   PositiveInfinity -&gt; PositiveInfinity\n   NegativeInfinity -&gt; NegativeInfinity\n }\n ```","url":"time_util/bound.html#start_bound_type_of"},{"doc":"time_util/bound","title":"finite_start_of","content":"finite_start_of(interval: Interval&lt;PosixTime&gt;) -&gt; Option&lt;PosixTime&gt;\n May return the **normalized lower-bound** `Posixtime` of `interval`","url":"time_util/bound.html#finite_start_of"},{"doc":"time_util/bound","title":"finite_end_of","content":"finite_end_of(interval: Interval&lt;PosixTime&gt;) -&gt; Option&lt;PosixTime&gt;\n May return the **normalized uppoer-bound** `PosixTime` of `interval`","url":"time_util/bound.html#finite_end_of"},{"doc":"time_util/bound","title":"end_bound_type_of","content":"end_bound_type_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Returns the `upper_bound` type of an `interval` with **normalized** `Finite(PosixTime)`\n\n i.e. returns,\n ```\n let bound = end_of(interval)\n when bound.bound_type is {\n   Finite(time) -&gt;\n     Finite(\n       if bound.is_inclusive {\n         time\n       } else {\n         time - 1\n       },\n     )\n   PositiveInfinity -&gt; PositiveInfinity\n   NegativeInfinity -&gt; NegativeInfinity\n }\n ```","url":"time_util/bound.html#end_bound_type_of"},{"doc":"time_util/bound","title":"end_of","content":"end_of(interval: Interval&lt;PosixTime&gt;) -&gt; IntervalBound&lt;PosixTime&gt;\n Returns the `upper_bound` of an `interval`","url":"time_util/bound.html#end_of"},{"doc":"time_util/bound","title":"time_util/bound","content":"","url":"time_util/bound.html"},{"doc":"time_util/cheap/interval","title":"is_after","content":"is_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval is **after** another interval.\n This function is an alias for `starts_after`.","url":"time_util/cheap/interval.html#is_after"},{"doc":"time_util/cheap/interval","title":"is_after_or_at","content":"is_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** another interval.\n This function is an alias for `starts_after_or_at`.","url":"time_util/cheap/interval.html#is_after_or_at"},{"doc":"time_util/cheap/interval","title":"is_before","content":"is_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before** another interval.\n This function is an alias for `ends_before`.","url":"time_util/cheap/interval.html#is_before"},{"doc":"time_util/cheap/interval","title":"is_before_or_at","content":"is_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** another interval.\n This function is an alias for `ends_before_or_at`.","url":"time_util/cheap/interval.html#is_before_or_at"},{"doc":"time_util/cheap/interval","title":"starts_after","content":"starts_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether an interval starts **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after(an_interval) == True\n between(6, 9) |&gt; starts_after(an_interval) == True\n strictly_after(5) |&gt; starts_after(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after(an_interval) == False\n strictly_after(3) |&gt; starts_after(an_interval) == False\n before(4) |&gt; starts_after(an_interval) == False\n before(5) |&gt; starts_after(an_interval) == False\n before(6) |&gt; starts_after(an_interval) == False\n strictly_before(5) |&gt; starts_after(an_interval) == False\n strictly_before(6) |&gt; starts_after(an_interval) == False\n strictly_before(7) |&gt; starts_after(an_interval) == False\n between(1, 4) |&gt; starts_after(an_interval) == False\n between(2, 5) |&gt; starts_after(an_interval) == False\n between(3, 6) |&gt; starts_after(an_interval) == False\n between(4, 7) |&gt; starts_after(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after(an_interval) == False\n between(5, 8) |&gt; starts_after(an_interval) == False\n strictly_after(4) |&gt; starts_after(an_interval) == False\n strictly_between(4, 7) |&gt; starts_after(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_after"},{"doc":"time_util/cheap/interval","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(6) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(5) |&gt; starts_after_or_at(an_interval) == True\n between(6, 9) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_after_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_after_or_at(an_interval) == True\n between(5, 8) |&gt; starts_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(an_interval) == False\n strictly_after(3) |&gt; starts_after_or_at(an_interval) == False\n before(4) |&gt; starts_after_or_at(an_interval) == False\n before(5) |&gt; starts_after_or_at(an_interval) == False\n before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(5) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(6) |&gt; starts_after_or_at(an_interval) == False\n strictly_before(7) |&gt; starts_after_or_at(an_interval) == False\n between(1, 4) |&gt; starts_after_or_at(an_interval) == False\n between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n between(4, 7) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(an_interval) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_after_or_at"},{"doc":"time_util/cheap/interval","title":"starts_before","content":"starts_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before(an_interval) == True\n strictly_after(3) |&gt; starts_before(an_interval) == True\n before(4) |&gt; starts_before(an_interval) == True\n before(5) |&gt; starts_before(an_interval) == True\n before(6) |&gt; starts_before(an_interval) == True\n strictly_before(5) |&gt; starts_before(an_interval) == True\n strictly_before(6) |&gt; starts_before(an_interval) == True\n strictly_before(7) |&gt; starts_before(an_interval) == True\n between(1, 4) |&gt; starts_before(an_interval) == True\n between(2, 5) |&gt; starts_before(an_interval) == True\n between(3, 6) |&gt; starts_before(an_interval) == True\n between(4, 7) |&gt; starts_before(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before(an_interval) == False\n strictly_after(5) |&gt; starts_before(an_interval) == False\n between(6, 9) |&gt; starts_before(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before(an_interval) == False\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before(an_interval) == False\n strictly_after(4) |&gt; starts_before(an_interval) == False\n between(5, 8) |&gt; starts_before(an_interval) == False\n strictly_between(4, 7) |&gt; starts_before(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_before"},{"doc":"time_util/cheap/interval","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n after(4) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(3) |&gt; starts_before_or_at(an_interval) == True\n before(4) |&gt; starts_before_or_at(an_interval) == True\n before(5) |&gt; starts_before_or_at(an_interval) == True\n before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(6) |&gt; starts_before_or_at(an_interval) == True\n strictly_before(7) |&gt; starts_before_or_at(an_interval) == True\n between(1, 4) |&gt; starts_before_or_at(an_interval) == True\n between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(an_interval) == True\n \n // interval starts AT another interval:\n after(5) |&gt; starts_before_or_at(an_interval) == True\n strictly_after(4) |&gt; starts_before_or_at(an_interval) == True\n between(5, 8) |&gt; starts_before_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(an_interval) == True\n \n // negative cases:\n after(6) |&gt; starts_before_or_at(an_interval) == False\n strictly_after(5) |&gt; starts_before_or_at(an_interval) == False\n between(6, 9) |&gt; starts_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#starts_before_or_at"},{"doc":"time_util/cheap/interval","title":"ends_after","content":"ends_after(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after(an_interval) == True\n after(5) |&gt; ends_after(an_interval) == True\n after(6) |&gt; ends_after(an_interval) == True\n strictly_after(3) |&gt; ends_after(an_interval) == True\n strictly_after(4) |&gt; ends_after(an_interval) == True\n strictly_after(5) |&gt; ends_after(an_interval) == True\n before(6) |&gt; ends_after(an_interval) == True\n strictly_before(7) |&gt; ends_after(an_interval) == True\n between(3, 6) |&gt; ends_after(an_interval) == True\n between(4, 7) |&gt; ends_after(an_interval) == True\n between(5, 8) |&gt; ends_after(an_interval) == True\n between(6, 9) |&gt; ends_after(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after(an_interval) == False\n strictly_before(5) |&gt; ends_after(an_interval) == False\n between(1, 4) |&gt; ends_after(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after(an_interval) == False\n strictly_before(6) |&gt; ends_after(an_interval) == False\n between(2, 5) |&gt; ends_after(an_interval) == False\n strictly_between(3, 6) |&gt; ends_after(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_after"},{"doc":"time_util/cheap/interval","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** another interval.\n ```\n let an_interval = between(0, 5)\n \n after(4) |&gt; ends_after_or_at(an_interval) == True\n after(5) |&gt; ends_after_or_at(an_interval) == True\n after(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(3) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(4) |&gt; ends_after_or_at(an_interval) == True\n strictly_after(5) |&gt; ends_after_or_at(an_interval) == True\n before(6) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(7) |&gt; ends_after_or_at(an_interval) == True\n between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n between(6, 9) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_after_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_after_or_at(an_interval) == True\n between(2, 5) |&gt; ends_after_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(an_interval) == True\n \n // negative cases:\n before(4) |&gt; ends_after_or_at(an_interval) == False\n strictly_before(5) |&gt; ends_after_or_at(an_interval) == False\n between(1, 4) |&gt; ends_after_or_at(an_interval) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_after_or_at"},{"doc":"time_util/cheap/interval","title":"ends_before","content":"ends_before(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before(an_interval) == True\n strictly_before(5) |&gt; ends_before(an_interval) == True\n between(1, 4) |&gt; ends_before(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before(an_interval) == False\n after(5) |&gt; ends_before(an_interval) == False\n after(6) |&gt; ends_before(an_interval) == False\n strictly_after(3) |&gt; ends_before(an_interval) == False\n strictly_after(4) |&gt; ends_before(an_interval) == False\n strictly_after(5) |&gt; ends_before(an_interval) == False\n before(6) |&gt; ends_before(an_interval) == False\n strictly_before(7) |&gt; ends_before(an_interval) == False\n between(3, 6) |&gt; ends_before(an_interval) == False\n between(4, 7) |&gt; ends_before(an_interval) == False\n between(5, 8) |&gt; ends_before(an_interval) == False\n between(6, 9) |&gt; ends_before(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before(an_interval) == False\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before(an_interval) == False\n strictly_before(6) |&gt; ends_before(an_interval) == False\n between(2, 5) |&gt; ends_before(an_interval) == False\n strictly_between(3, 6) |&gt; ends_before(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_before"},{"doc":"time_util/cheap/interval","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  other_interval: Interval&lt;PosixTime&gt;,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** another interval.\n ```\n let an_interval = between(5, 10)\n \n before(4) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(5) |&gt; ends_before_or_at(an_interval) == True\n between(1, 4) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n \n // interval ends AT another interval:\n before(5) |&gt; ends_before_or_at(an_interval) == True\n strictly_before(6) |&gt; ends_before_or_at(an_interval) == True\n between(2, 5) |&gt; ends_before_or_at(an_interval) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(an_interval) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(an_interval) == False\n after(5) |&gt; ends_before_or_at(an_interval) == False\n after(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(3) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(4) |&gt; ends_before_or_at(an_interval) == False\n strictly_after(5) |&gt; ends_before_or_at(an_interval) == False\n before(6) |&gt; ends_before_or_at(an_interval) == False\n strictly_before(7) |&gt; ends_before_or_at(an_interval) == False\n between(3, 6) |&gt; ends_before_or_at(an_interval) == False\n between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n between(6, 9) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(an_interval) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(an_interval) == False\n ```","url":"time_util/cheap/interval.html#ends_before_or_at"},{"doc":"time_util/cheap/interval","title":"time_util/cheap/interval","content":" A slightly cheaper version of `time_util/interval` in terms of memory and CPU usage.","url":"time_util/cheap/interval.html"},{"doc":"time_util/posixtime","title":"is_after","content":"is_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after** the specified `PosixTime`.\n This function is an alias for `starts_after`.","url":"time_util/posixtime.html#is_after"},{"doc":"time_util/posixtime","title":"is_after_or_at","content":"is_after_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **after-or-at** the specified `PosixTime`.\n This function is an alias for `starts_after_or_at`.","url":"time_util/posixtime.html#is_after_or_at"},{"doc":"time_util/posixtime","title":"is_before","content":"is_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before** the specified `PosixTime`.\n This function is an alias for `ends_before`.","url":"time_util/posixtime.html#is_before"},{"doc":"time_util/posixtime","title":"is_before_or_at","content":"is_before_or_at(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` is **before-or-at** the specified `PosixTime`.\n This function is an alias for `ends_before_or_at`.","url":"time_util/posixtime.html#is_before_or_at"},{"doc":"time_util/posixtime","title":"starts_after","content":"starts_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **after** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after(5) == True\n between(6, 9) |&gt; starts_after(5) == True\n strictly_after(5) |&gt; starts_after(5) == True\n strictly_between(5, 8) |&gt; starts_after(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after(5) == False\n strictly_after(3) |&gt; starts_after(5) == False\n before(4) |&gt; starts_after(5) == False\n before(5) |&gt; starts_after(5) == False\n before(6) |&gt; starts_after(5) == False\n strictly_before(5) |&gt; starts_after(5) == False\n strictly_before(6) |&gt; starts_after(5) == False\n strictly_before(7) |&gt; starts_after(5) == False\n between(1, 4) |&gt; starts_after(5) == False\n between(2, 5) |&gt; starts_after(5) == False\n between(3, 6) |&gt; starts_after(5) == False\n between(4, 7) |&gt; starts_after(5) == False\n strictly_between(2, 5) |&gt; starts_after(5) == False\n strictly_between(3, 6) |&gt; starts_after(5) == False\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after(5) == False\n between(5, 8) |&gt; starts_after(5) == False\n strictly_after(4) |&gt; starts_after(5) == False\n strictly_between(4, 7) |&gt; starts_after(5) == False\n ```","url":"time_util/posixtime.html#starts_after"},{"doc":"time_util/posixtime","title":"starts_after_or_at","content":"starts_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **after-or-at** the specified `PosixTime`\n ```\n after(6) |&gt; starts_after_or_at(5) == True\n strictly_after(5) |&gt; starts_after_or_at(5) == True\n between(6, 9) |&gt; starts_after_or_at(5) == True\n strictly_between(5, 8) |&gt; starts_after_or_at(5) == True\n \n // interval starts AT deadline:\n after(5) |&gt; starts_after_or_at(5) == True\n strictly_after(4) |&gt; starts_after_or_at(5) == True\n between(5, 8) |&gt; starts_after_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_after_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; starts_after_or_at(5) == False\n strictly_after(3) |&gt; starts_after_or_at(5) == False\n before(4) |&gt; starts_after_or_at(5) == False\n before(5) |&gt; starts_after_or_at(5) == False\n before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(5) |&gt; starts_after_or_at(5) == False\n strictly_before(6) |&gt; starts_after_or_at(5) == False\n strictly_before(7) |&gt; starts_after_or_at(5) == False\n between(1, 4) |&gt; starts_after_or_at(5) == False\n between(2, 5) |&gt; starts_after_or_at(5) == False\n between(3, 6) |&gt; starts_after_or_at(5) == False\n between(4, 7) |&gt; starts_after_or_at(5) == False\n strictly_between(2, 5) |&gt; starts_after_or_at(5) == False\n strictly_between(3, 6) |&gt; starts_after_or_at(5) == False\n ```","url":"time_util/posixtime.html#starts_after_or_at"},{"doc":"time_util/posixtime","title":"starts_before","content":"starts_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` starts **before** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before(5) == True\n strictly_after(3) |&gt; starts_before(5) == True\n before(4) |&gt; starts_before(5) == True\n before(5) |&gt; starts_before(5) == True\n before(6) |&gt; starts_before(5) == True\n strictly_before(5) |&gt; starts_before(5) == True\n strictly_before(6) |&gt; starts_before(5) == True\n strictly_before(7) |&gt; starts_before(5) == True\n between(1, 4) |&gt; starts_before(5) == True\n between(2, 5) |&gt; starts_before(5) == True\n between(3, 6) |&gt; starts_before(5) == True\n between(4, 7) |&gt; starts_before(5) == True\n strictly_between(2, 5) |&gt; starts_before(5) == True\n strictly_between(3, 6) |&gt; starts_before(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before(5) == False\n strictly_after(5) |&gt; starts_before(5) == False\n between(6, 9) |&gt; starts_before(5) == False\n strictly_between(5, 8) |&gt; starts_before(5) == False\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before(5) == False\n strictly_after(4) |&gt; starts_before(5) == False\n between(5, 8) |&gt; starts_before(5) == False\n strictly_between(4, 7) |&gt; starts_before(5) == False\n ```","url":"time_util/posixtime.html#starts_before"},{"doc":"time_util/posixtime","title":"starts_before_or_at","content":"starts_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` starts **before-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; starts_before_or_at(5) == True\n strictly_after(3) |&gt; starts_before_or_at(5) == True\n before(4) |&gt; starts_before_or_at(5) == True\n before(5) |&gt; starts_before_or_at(5) == True\n before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(5) |&gt; starts_before_or_at(5) == True\n strictly_before(6) |&gt; starts_before_or_at(5) == True\n strictly_before(7) |&gt; starts_before_or_at(5) == True\n between(1, 4) |&gt; starts_before_or_at(5) == True\n between(2, 5) |&gt; starts_before_or_at(5) == True\n between(3, 6) |&gt; starts_before_or_at(5) == True\n between(4, 7) |&gt; starts_before_or_at(5) == True\n strictly_between(2, 5) |&gt; starts_before_or_at(5) == True\n strictly_between(3, 6) |&gt; starts_before_or_at(5) == True\n\n // interval starts AT deadline:\n after(5) |&gt; starts_before_or_at(5) == True\n strictly_after(4) |&gt; starts_before_or_at(5) == True\n between(5, 8) |&gt; starts_before_or_at(5) == True\n strictly_between(4, 7) |&gt; starts_before_or_at(5) == True\n\n // negative cases:\n after(6) |&gt; starts_before_or_at(5) == False\n strictly_after(5) |&gt; starts_before_or_at(5) == False\n between(6, 9) |&gt; starts_before_or_at(5) == False\n strictly_between(5, 8) |&gt; starts_before_or_at(5) == False\n ```","url":"time_util/posixtime.html#starts_before_or_at"},{"doc":"time_util/posixtime","title":"ends_after","content":"ends_after(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **after** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after(5) == True\n after(5) |&gt; ends_after(5) == True\n after(6) |&gt; ends_after(5) == True\n strictly_after(3) |&gt; ends_after(5) == True\n strictly_after(4) |&gt; ends_after(5) == True\n strictly_after(5) |&gt; ends_after(5) == True\n before(6) |&gt; ends_after(5) == True\n strictly_before(7) |&gt; ends_after(5) == True\n between(3, 6) |&gt; ends_after(5) == True\n between(4, 7) |&gt; ends_after(5) == True\n between(5, 8) |&gt; ends_after(5) == True\n between(6, 9) |&gt; ends_after(5) == True\n strictly_between(4, 7) |&gt; ends_after(5) == True\n strictly_between(5, 8) |&gt; ends_after(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after(5) == False\n strictly_before(5) |&gt; ends_after(5) == False\n between(1, 4) |&gt; ends_after(5) == False\n strictly_between(2, 5) |&gt; ends_after(5) == False\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after(5) == False\n strictly_before(6) |&gt; ends_after(5) == False\n between(2, 5) |&gt; ends_after(5) == False\n strictly_between(3, 6) |&gt; ends_after(5) == False\n ```","url":"time_util/posixtime.html#ends_after"},{"doc":"time_util/posixtime","title":"ends_after_or_at","content":"ends_after_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **after-or-at** the specified `PosixTime`\n ```\n after(4) |&gt; ends_after_or_at(5) == True\n after(5) |&gt; ends_after_or_at(5) == True\n after(6) |&gt; ends_after_or_at(5) == True\n strictly_after(3) |&gt; ends_after_or_at(5) == True\n strictly_after(4) |&gt; ends_after_or_at(5) == True\n strictly_after(5) |&gt; ends_after_or_at(5) == True\n before(6) |&gt; ends_after_or_at(5) == True\n strictly_before(7) |&gt; ends_after_or_at(5) == True\n between(3, 6) |&gt; ends_after_or_at(5) == True\n between(4, 7) |&gt; ends_after_or_at(5) == True\n between(5, 8) |&gt; ends_after_or_at(5) == True\n between(6, 9) |&gt; ends_after_or_at(5) == True\n strictly_between(4, 7) |&gt; ends_after_or_at(5) == True\n strictly_between(5, 8) |&gt; ends_after_or_at(5) == True\n\n // interval ends AT deadline:\n before(5) |&gt; ends_after_or_at(5) == True\n strictly_before(6) |&gt; ends_after_or_at(5) == True\n between(2, 5) |&gt; ends_after_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_after_or_at(5) == True\n\n // negative cases:\n before(4) |&gt; ends_after_or_at(5) == False\n strictly_before(5) |&gt; ends_after_or_at(5) == False\n between(1, 4) |&gt; ends_after_or_at(5) == False\n strictly_between(2, 5) |&gt; ends_after_or_at(5) == False\n ```","url":"time_util/posixtime.html#ends_after_or_at"},{"doc":"time_util/posixtime","title":"ends_before","content":"ends_before(some_interval: Interval&lt;PosixTime&gt;, deadline: PosixTime) -&gt; Bool\n Tells whether `some_interval` ends **before** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before(5) == True\n strictly_before(5) |&gt; ends_before(5) == True\n between(1, 4) |&gt; ends_before(5) == True\n strictly_between(2, 5) |&gt; ends_before(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before(5) == False\n after(5) |&gt; ends_before(5) == False\n after(6) |&gt; ends_before(5) == False\n strictly_after(3) |&gt; ends_before(5) == False\n strictly_after(4) |&gt; ends_before(5) == False\n strictly_after(5) |&gt; ends_before(5) == False\n before(6) |&gt; ends_before(5) == False\n strictly_before(7) |&gt; ends_before(5) == False\n between(3, 6) |&gt; ends_before(5) == False\n between(4, 7) |&gt; ends_before(5) == False\n between(5, 8) |&gt; ends_before(5) == False\n between(6, 9) |&gt; ends_before(5) == False\n strictly_between(4, 7) |&gt; ends_before(5) == False\n strictly_between(5, 8) |&gt; ends_before(5) == False\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before(5) == False\n strictly_before(6) |&gt; ends_before(5) == False\n between(2, 5) |&gt; ends_before(5) == False\n strictly_between(3, 6) |&gt; ends_before(5) == False\n ```","url":"time_util/posixtime.html#ends_before"},{"doc":"time_util/posixtime","title":"ends_before_or_at","content":"ends_before_or_at(\n  some_interval: Interval&lt;PosixTime&gt;,\n  deadline: PosixTime,\n) -&gt; Bool\n Tells whether `some_interval` ends **before-or-at** the specified `PosixTime`\n ```\n before(4) |&gt; ends_before_or_at(5) == True\n strictly_before(5) |&gt; ends_before_or_at(5) == True\n between(1, 4) |&gt; ends_before_or_at(5) == True\n strictly_between(2, 5) |&gt; ends_before_or_at(5) == True\n \n // interval ends AT deadline:\n before(5) |&gt; ends_before_or_at(5) == True\n strictly_before(6) |&gt; ends_before_or_at(5) == True\n between(2, 5) |&gt; ends_before_or_at(5) == True\n strictly_between(3, 6) |&gt; ends_before_or_at(5) == True\n \n // negative cases:\n after(4) |&gt; ends_before_or_at(5) == False\n after(5) |&gt; ends_before_or_at(5) == False\n after(6) |&gt; ends_before_or_at(5) == False\n strictly_after(3) |&gt; ends_before_or_at(5) == False\n strictly_after(4) |&gt; ends_before_or_at(5) == False\n strictly_after(5) |&gt; ends_before_or_at(5) == False\n before(6) |&gt; ends_before_or_at(5) == False\n strictly_before(7) |&gt; ends_before_or_at(5) == False\n between(3, 6) |&gt; ends_before_or_at(5) == False\n between(4, 7) |&gt; ends_before_or_at(5) == False\n between(5, 8) |&gt; ends_before_or_at(5) == False\n between(6, 9) |&gt; ends_before_or_at(5) == False\n strictly_between(4, 7) |&gt; ends_before_or_at(5) == False\n strictly_between(5, 8) |&gt; ends_before_or_at(5) == False\n ```","url":"time_util/posixtime.html#ends_before_or_at"},{"doc":"time_util/posixtime","title":"time_util/posixtime","content":" A utility module to help comparing some intervals to specified deadlines.\n The code reuses `time_util/interval` module, so there&#39;s only one generic\n internal function to handle all logic variations at the cost of memory and\n CPU usage.\n\n Use `time_util/cheap/posixtime` instead for cheaper memory and CPU usage.","url":"time_util/posixtime.html"},{"doc":"time_util/time","title":"add_time","content":"add_time(self: PosixTime, time: TimeUnit) -&gt; PosixTime\n Adds time to a [`PosixTime`](#PosixTime). For example:\n ```aiken\n 1234567890000\n   |&gt; add_time(Zero)\n // == 1234567890000 + 0\n \n 5443200000\n   |&gt; add_time(8 |&gt; Week)\n // == 5443200000 + 8 * 7 * 24 * 60 * 60 * 1_000\n \n 691200000\n   |&gt; add_time(7 |&gt; Day)\n // == 691200000 + 7 * 24 * 60 * 60 * 1_000\n \n 25200000\n   |&gt; add_time(6 |&gt; Minute)\n // == 25200000 + 6 * 60 * 1_000\n \n 360000\n   |&gt; add_time(3 |&gt; Second)\n // == 360000 + 3 * 1_000\n \n 5000\n   |&gt; add_time(2 |&gt; MS)\n // == 5000 + 2\n ```","url":"time_util/time.html#add_time"},{"doc":"time_util/time","title":"sub_time","content":"sub_time(self: PosixTime, time: TimeUnit) -&gt; PosixTime\n Subtracts time from a [`PosixTime`](#PosixTime). For example:\n ```aiken\n 1234567890000\n   |&gt; sub_time(Zero)\n // == 1234567890000 - 0\n \n 5443200000\n   |&gt; sub_time(8 |&gt; Week)\n // == 5443200000 - 8 * 7 * 24 * 60 * 60 * 1_000\n \n 691200000\n   |&gt; sub_time(7 |&gt; Day)\n // == 691200000 - 7 * 24 * 60 * 60 * 1_000\n \n 25200000\n   |&gt; sub_time(6 |&gt; Minute)\n // == 25200000 - 6 * 60 * 1_000\n \n 360000\n   |&gt; sub_time(3 |&gt; Second)\n // == 360000 - 3 * 1_000\n \n 5000\n   |&gt; sub_time(2 |&gt; MS)\n // == 5000 - 2\n ```","url":"time_util/time.html#sub_time"},{"doc":"time_util/time","title":"add_interval","content":"add_interval(\n  self: Interval&lt;PosixTime&gt;,\n  lower_bound: TimeUnit,\n  upper_bound: TimeUnit,\n) -&gt; Interval&lt;PosixTime&gt;\n Adds time to an `Interval`. For example:\n ```aiken\n interval.after(1234567890000)\n   |&gt; add_interval(lower_bound: Zero, upper_bound: Zero)\n // == interval.after(1234567890000 + 0)\n \n interval.after(5443200000)\n   |&gt; add_interval(Zero, 8 |&gt; Week)\n // == interval.after(5443200000 + 0)\n \n interval.after(691200000)\n   |&gt; add_interval(7 |&gt; Day, Zero)\n // == interval.after(691200000 + 7 * 24 * 60 * 60 * 1_000)\n \n interval.after(25200000)\n   |&gt; add_interval(6 |&gt; Minute, 5 |&gt; Hour)\n // == interval.after(25200000 + 6 * 60 * 1_000)\n \n interval.before(360000)\n   |&gt; add_interval(4 |&gt; DS, 3 |&gt; Second)\n // == interval.before(360000 + 3 * 1_000)\n \n interval.between(4, 5000)\n   |&gt; add_interval(2 |&gt; MS, 1 |&gt; CS)\n // == interval.between(4 + 2, 5000 + 1 * 10)\n ```","url":"time_util/time.html#add_interval"},{"doc":"time_util/time","title":"sub_interval","content":"sub_interval(\n  self: Interval&lt;PosixTime&gt;,\n  lower_bound: TimeUnit,\n  upper_bound: TimeUnit,\n) -&gt; Interval&lt;PosixTime&gt;\n Subtracts time from an `Interval`. For example:\n ```aiken\n interval.after(1234567890000)\n   |&gt; sub_interval(lower_bound: Zero, upper_bound: Zero)\n // == interval.after(1234567890000 - 0)\n \n interval.after(5443200000)\n   |&gt; sub_interval(Zero, 8 |&gt; Week)\n // == interval.after(5443200000 - 0)\n \n interval.after(691200000)\n   |&gt; sub_interval(7 |&gt; Day, Zero)\n // == interval.after(691200000 - 7 * 24 * 60 * 60 * 1_000)\n \n interval.after(25200000)\n   |&gt; sub_interval(6 |&gt; Minute, 5 |&gt; Hour)\n // == interval.after(25200000 - 6 * 60 * 1_000)\n \n interval.before(360000)\n   |&gt; sub_interval(4 |&gt; DS, 3 |&gt; Second)\n // == interval.before(360000 - 3 * 1_000)\n \n interval.between(4, 5000)\n   |&gt; sub_interval(2 |&gt; MS, 1 |&gt; CS)\n // == interval.between(4 - 2, 5000 - 1 * 10)\n ```","url":"time_util/time.html#sub_interval"},{"doc":"time_util/time","title":"add_bound","content":"add_bound(\n  self: IntervalBound&lt;PosixTime&gt;,\n  bound: TimeUnit,\n) -&gt; IntervalBound&lt;PosixTime&gt;\n Adds time to an `IntervalBound`. For example:\n ```aiken\n interval.after(1234567890000).lower_bound\n   |&gt; add_bound(Zero)\n // == IntervalBound { bound_type: Finite(1234567890000 + 0), is_inclusive: True }\n \n interval.after(5443200000).upper_bound\n   |&gt; add_bound(8 |&gt; Week)\n // == IntervalBound { bound_type: PositiveInfinity, is_inclusive: True }\n \n interval.before(691200000).lower_bound\n   |&gt; add_bound(7 |&gt; Day)\n // == IntervalBound { bound_type: NegativeInfinity, is_inclusive: True }\n \n interval.before(25200000).upper_bound\n   |&gt; add_bound(6 |&gt; Minute)\n // == IntervalBound { bound_type: Finite(25200000 + 6 * 60 * 1_000), is_inclusive: True }\n \n interval.between(360000, 12780000).lower_bound\n   |&gt; add_bound(3 |&gt; Second)\n // == IntervalBound { bound_type: Finite(360000 + 3 * 1_000), is_inclusive: True }\n \n interval.between(4, 5000).upper_bound\n   |&gt; add_bound(2 |&gt; MS)\n // == IntervalBound { bound_type: Finite(5000 + 2), is_inclusive: True }\n ```","url":"time_util/time.html#add_bound"},{"doc":"time_util/time","title":"sub_bound","content":"sub_bound(\n  self: IntervalBound&lt;PosixTime&gt;,\n  bound: TimeUnit,\n) -&gt; IntervalBound&lt;PosixTime&gt;\n Subtracts time from an `IntervalBound`. For example:\n ```aiken\n interval.after(1234567890000).lower_bound\n   |&gt; sub_bound(Zero)\n // == IntervalBound { bound_type: Finite(1234567890000 - 0), is_inclusive: True }\n \n interval.after(5443200000).upper_bound\n   |&gt; sub_bound(8 |&gt; Week)\n // == IntervalBound { bound_type: PositiveInfinity, is_inclusive: True }\n \n interval.before(691200000).lower_bound\n   |&gt; sub_bound(7 |&gt; Day)\n // == IntervalBound { bound_type: NegativeInfinity, is_inclusive: True }\n \n interval.before(25200000).upper_bound\n   |&gt; sub_bound(6 |&gt; Minute)\n // == IntervalBound { bound_type: Finite(25200000 - 6 * 60 * 1_000), is_inclusive: True }\n \n interval.between(360000, 12780000).lower_bound\n   |&gt; sub_bound(3 |&gt; Second)\n // == IntervalBound { bound_type: Finite(360000 - 3 * 1_000), is_inclusive: True }\n \n interval.between(4, 5000).upper_bound\n   |&gt; sub_bound(2 |&gt; MS)\n // == IntervalBound { bound_type: Finite(5000 - 2), is_inclusive: True }\n ```","url":"time_util/time.html#sub_bound"},{"doc":"time_util/time","title":"add_finite","content":"add_finite(\n  self: IntervalBoundType&lt;PosixTime&gt;,\n  finite: TimeUnit,\n) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Adds time to a [finite](https://aiken-lang.github.io/stdlib/aiken/interval.html#IntervalBoundType)\n `IntervalBoundType`. For example:\n ```aiken\n interval.after(1234567890000).lower_bound.bound_type\n   |&gt; add_finite(Zero)\n // == Finite(1234567890000 + 0)\n \n interval.after(5443200000).upper_bound.bound_type\n   |&gt; add_finite(8 |&gt; Week)\n // == PositiveInfinity\n \n interval.before(691200000).lower_bound.bound_type\n   |&gt; add_finite(7 |&gt; Day)\n // == NegativeInfinity\n \n interval.before(25200000).upper_bound.bound_type\n   |&gt; add_finite(6 |&gt; Minute)\n // == Finite(25200000 + 6 * 60 * 1_000)\n \n interval.between(360000, 12780000).lower_bound.bound_type\n   |&gt; add_finite(3 |&gt; Second)\n // == Finite(360000 + 3 * 1_000)\n \n interval.between(4, 5000).upper_bound.bound_type\n   |&gt; add_finite(2 |&gt; MS)\n // == Finite(5000 + 2)\n ```","url":"time_util/time.html#add_finite"},{"doc":"time_util/time","title":"sub_finite","content":"sub_finite(\n  self: IntervalBoundType&lt;PosixTime&gt;,\n  finite: TimeUnit,\n) -&gt; IntervalBoundType&lt;PosixTime&gt;\n Subtracts time from a [finite](https://aiken-lang.github.io/stdlib/aiken/interval.html#IntervalBoundType)\n `IntervalBoundType`. For example:\n ```aiken\n interval.after(1234567890000).lower_bound.bound_type\n   |&gt; sub_finite(Zero)\n // == Finite(1234567890000 - 0)\n \n interval.after(5443200000).upper_bound.bound_type\n   |&gt; sub_finite(8 |&gt; Week)\n // == PositiveInfinity\n \n interval.before(691200000).lower_bound.bound_type\n   |&gt; sub_finite(7 |&gt; Day)\n // == NegativeInfinity\n \n interval.before(25200000).upper_bound.bound_type\n   |&gt; sub_finite(6 |&gt; Minute)\n // == Finite(25200000 - 6 * 60 * 1_000)\n \n interval.between(360000, 12780000).lower_bound.bound_type\n   |&gt; sub_finite(3 |&gt; Second)\n // == Finite(360000 - 3 * 1_000)\n \n interval.between(4, 5000).upper_bound.bound_type\n   |&gt; sub_finite(2 |&gt; MS)\n // == Finite(5000 - 2)\n ```","url":"time_util/time.html#sub_finite"},{"doc":"time_util/time","title":"PosixTime","content":"PosixTime = Int\n A number of milliseconds since 00:00:00 UTC on 1 January 1970.\n\n Brought back [`aiken/time.{PosixTime}`](https://github.com/aiken-lang/stdlib/blob/205e8f9a06c6f3c9e7c93bb7745e390515e2e2cf/lib/aiken/time.ak)\n after being removed in [`stdlib v2.0.0`](https://github.com/aiken-lang/stdlib/releases/tag/v2.0.0#:~:text=The%20module%20aiken/time.%20The%20PosixTime%20alias%20is%20no%20longer%20used%20anywhere)\n","url":"time_util/time.html#PosixTime"},{"doc":"time_util/time","title":"TimeUnit","content":"TimeUnit {\n  Zero\n  MS(Int)\n  CS(Int)\n  DS(Int)\n  Second(Int)\n  Minute(Int)\n  Hour(Int)\n  Day(Int)\n  Week(Int)\n}\n\nZero\n\nMS(Int)\n Millisecond: `1 millisecond = 1 / 1_000 second`\nCS(Int)\n Centisecond: `1 centisecond = 10 milliseconds`\nDS(Int)\n Decisecond: `1 decisecond = 100 milliseconds`\nSecond(Int)\n\nMinute(Int)\n\nHour(Int)\n\nDay(Int)\n\nWeek(Int)\n","url":"time_util/time.html#TimeUnit"},{"doc":"time_util/time","title":"time_util/time","content":"","url":"time_util/time.html"}]);